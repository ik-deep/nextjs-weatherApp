import { useEffect, useState } from "react";
import WeatherModal from "@/components/WeatherModal";
import { getWeatherData } from "@/Utils/api";
import BackgroundLayout from "@/components/BackgroundLayout";
import MiniCard from "@/components/MiniCard";
import WeatherCard from "@/components/WeatherCard";
import Loader from "@/components/Loader";
import Header from "@/components/Header";
import Head from "next/head";



 const Home = () => {
  const [city, setCity] = useState('Delhi');
  const [weather, setWeather] = useState({});
  const [modalIsOpen, setModalIsOpen] = useState(true);
  const [values, setValues] = useState([])
  const [thisLocation, setLocation] = useState('')



  useEffect( () => {
    try{
      const data =  fetchWeatherData();
    
    } catch(error){
      console.log(error)
    }
  }, [])


  const handleSubmit = (e) => {
    e.preventDefault();
    fetchWeatherData();
  };

  const fetchWeatherData = async () => {
    setModalIsOpen(false);
    const data = await getWeatherData(city);
    setWeather(data.values[0]);
    setLocation(data.address)
    setValues(data.values)
    return data.values[0];
  }

  return (
    <>
      <Head>
        <title>Weather - Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header setModalIsOpen={setModalIsOpen}/>
      {/* <button onClick={() => setModalIsOpen(true)}>Select City</button> */}

      <BackgroundLayout weather={weather}></BackgroundLayout>
      {/* {weatherData && (
        <div>
          <h2>{weatherData.name} Weather</h2>
          <p>{weatherData.weather[0].description}</p>
          
        </div>
      )} */}
       
      <main className='w-full flex flex-wrap gap-8 py-4 px-[10%] items-center text-center justify-center'>
       <WeatherModal isOpen={modalIsOpen} onClose={setModalIsOpen} handleSubmit={handleSubmit} setCity={setCity} />
        {weather ? (<><WeatherCard
          place={thisLocation}
          windspeed={weather.wspd}
          humidity={weather.humidity}
          temperature={weather.temp}
          heatIndex={weather.heatindex}
          iconString={weather.conditions}
          conditions={weather.conditions}
        />

          <div className='flex justify-center gap-4 flex-wrap w-[60%]'>
            {
              values?.slice(1, 7).map(curr => {
                return (
                  <MiniCard
                    key={curr.datetime}
                    time={curr.datetime}
                    temp={curr.temp}
                    iconString={curr.conditions}
                  />
                )
              })
            }
          </div></>)
          : (<Loader />)
        }
      </main>
    </>
  );
}

export default Home;